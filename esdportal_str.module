<?php
/**
 * @file
 * Code for the esdportal_str feature.
 */

include_once 'esdportal_str.features.inc';

/**
 * Implements hook_entity_info_alter().
 *
 * Add some view modes
 */
function esdportal_str_entity_info_alter(&$entity_info) {
  $entity_info['taxonomy_term']['view modes']['aside'] = array(
    'label' => t('Aside'),
    'custom settings' => FALSE,
  );
  $entity_info['node']['view modes']['sitevisitask'] = array(
    'label' => t('Site visit ask'),
    'custom settings' => FALSE,
  );
  $entity_info['node']['view modes']['growthdataask'] = array(
    'label' => t('Growth data ask'),
    'custom settings' => FALSE,
  );
}

/**
 * Implements hook_preprocess_taxonomy_term().
 *
 * Add template hints for the added view modes
 */
function esdportal_str_preprocess_taxonomy_term(&$vars) {
  if($vars['view_mode'] == 'aside') {
    $vars['theme_hook_suggestions'][] = 'taxonomy_term__' . $vars['type'] . '__aside';
  }
}

/**
 * Implements hook_preprocess_node().
 *
 * Add template hints for the added view modes
 */
function esdportal_str_preprocess_node(&$vars) {
  if($vars['view_mode'] == 'sitevisitask') {
    $vars['theme_hook_suggestions'][] = 'node__' . $vars['type'] . '__sitevisitask';
  }
  if($vars['view_mode'] == 'growthdataask') {
    $vars['theme_hook_suggestions'][] = 'node__' . $vars['type'] . '__growthdataask';
  }
}

/**
 * Implements hook_permission().
 *
 * Define permission to allow editing field_school and field_site_visit_status
 * term ref.
 */
function esdportal_str_permission() {
  return array(
    'view own field_school' => array('title' => t('View own field_school')),
    'edit own field_school' => array('title' => t('Edit own field_school')),
    'view any field_school' => array('title' => t('View any field_school')),
    'edit any field_school' => array('title' => t('Edit any field_school')),
    'view own field_site_visit_status' => array('title' => t('View own field_site_visit_status')),
    'edit own field_site_visit_status' => array('title' => t('Edit own field_site_visit_status')),
    'view any field_site_visit_status' => array('title' => t('View any field_site_visit_status')),
    'edit any field_site_visit_status' => array('title' => t('Edit any field_site_visit_status')),
    'view own field_site_visit_available_dates' => array('title' => t('View own field_site_visit_available_dates')),
    'edit own field_site_visit_available_dates' => array('title' => t('Edit own field_site_visit_available_dates')),
    'view any field_site_visit_available_dates' => array('title' => t('View any field_site_visit_available_dates')),
    'edit any field_site_visit_available_dates' => array('title' => t('Edit any field_site_visit_available_dates')),
    'view own field_growth_data_doc' => array('title' => t('View own field_growth_data_doc')),
    'edit own field_growth_data_doc' => array('title' => t('Edit own field_growth_data_doc')),
    'view any field_growth_data_doc' => array('title' => t('View any field_growth_data_doc')),
    'edit any field_growth_data_doc' => array('title' => t('Edit any field_growth_data_doc')),
  );
}

/**
 * Implements hook_field_access().
 *
 * Special perms for:
 * * field_school taxnonomy reference
 * * field_site_visit_status taxnonomy reference
 * * field_site_visit_available_dates field
 *
 * (follows field_permission_example module)
 */
function esdportal_str_field_access($op, $field, $entity_type, $entity, $account) {
  if ($field['field_name'] == 'field_school') {
    // allow superusers no matter whoziewhatsit
    if (user_access('bypass node access') || user_access('administer content types')) {
      return TRUE;
    }
    $context = 'any';
    if ($entity_type == 'node' && $entity && $entity->uid == $account->uid) {
      $context = 'own';
    }
    $perm = $op . ' ' . $context . ' field_school';
    $access = user_access($perm, $account);
    return $access;
  }
  if ($field['field_name'] == 'field_site_visit_status') {
    // allow superusers no matter whoziewhatsit
    if (user_access('bypass node access') || user_access('administer content types')) {
      return TRUE;
    }
    $context = 'any';
    if ($entity_type == 'node' && $entity && $entity->uid == $account->uid) {
      $context = 'own';
    }
    $perm = $op . ' ' . $context . ' field_site_visit_status';
    $access = user_access($perm, $account);
    return $access;
  }
  if ($field['field_name'] == 'field_site_visit_available_dates') {
    // allow superusers no matter whoziewhatsit
    if (user_access('bypass node access') || user_access('administer content types')) {
      return TRUE;
    }
    $context = 'any';
    if ($entity_type == 'node' && $entity && $entity->uid == $account->uid) {
      $context = 'own';
    }
    $perm = $op . ' ' . $context . ' field_site_visit_available_dates';
    $access = user_access($perm, $account);
    return $access;
  }
  if ($field['field_name'] == 'field_growth_data_doc') {
    // allow superusers no matter whoziewhatsit
    if (user_access('bypass node access') || user_access('administer content types')) {
      return TRUE;
    }
    $context = 'any';
    if ($entity_type == 'node' && $entity && $entity->uid == $account->uid) {
      $context = 'own';
    }
    $perm = $op . ' ' . $context . ' field_growth_data_doc';
    $access = user_access($perm, $account);
    return $access;
  }
  // TODO: only show field_site_visit_reuse_reason and field_site_visit_unavailability for specific states
  return TRUE;
}

/**
 * Feedback form, for use in footer.
 */
function esdportal_str_form() {
  $form['intro'] = array(
    '#markup' => t('Please provide us with any feedback or ideas you have about this site for us to continue improving it for you.'),
  );
  $form['comments'] = array(
    '#type' => 'textarea',
    '#rows' => 4,
    '#required' => TRUE,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );

  return $form;
}

/**
 * Implements hook_form_submit().
 */
function esdportal_str_form_submit($form, &$form_state) {
  global $user;

  $vals = $form_state['values'];

  $module = 'esdportal_str';
  $key = 'feedback';
  $from = variable_get('site_mail', 'eanderson@excellentschoolsdetroit.org');

  $message = drupal_mail($module, $key, $to, language_default(), $vals, $from, FALSE);
  $message['subject'] = t('Portal feedback from user @username', array('@username' => $user->name));
  $message['body'] = t('@name wrote:', array('@name' => $user->name)) . "\n\n" . $vals['comments'];
  $message['body'] .= "\n\n--\n" . t('Submitted by user @user from @url', array('@user' => $user->name, '@url' => $_SERVER['REQUEST_URI']));

  $system = drupal_mail_system($module, $key);

  $message['result'] = $system->mail($message);


  if ($message['result'] == TRUE) {
    drupal_set_message(t('Thank you for providing feedback.'));
  }
  else {
    drupal_set_message(t('There was a problem sending your feedback.'), 'error');
  }
}

/**
 * Implements hook_block_info().
 */
function esdportal_str_block_info() {
  return array(
    'feedback' => array(
      'info' => 'Feedback form',
      'cache' => DRUPAL_CACHE_PER_ROLE,
    ),
  );
}

/**
 * Implements hook_block_view().
 *
 * Feedback form block
 */
function esdportal_str_block_view($delta = '') {
  switch ($delta) {
    case 'feedback':
    default:
      $block['subject'] = t('Feedback');
      $block['content'] = drupal_get_form('esdportal_str_form');
    break;
  }
  return $block;
}

/**
 * Implements hook_views_pre_build().
 *
 * Alter data_ui views field handlers to output NULLs as empty rather than 0.
 */
function esdportal_str_views_pre_build(&$view) {
  /*
  if ($view->export_module = 'data_ui') {
    foreach ($view->field as $handler) {
      $handler->options['empty_zero'] = FALSE;
      $handler->options['hide_empty'] = TRUE;
    }
  }
  */
}

/**
 *
 */
function esdportal_str_field_widget_form_alter(&$element, &$form_state, $context) {
  $is_sitevisitask = (isset($element['#field_name']) && $element['#field_name'] == 'field_site_visit_status');
  $edit_any_sitevisitask = user_access('edit any field_site_visit_status');

  $is_growthdatadoc = (isset($element[0]) && isset($element[0]['#field_name']) && $element[0]['#field_name'] == 'field_growth_data_doc');
  $edit_any_growthdatadoc = user_access('edit any field_growth_data_doc');

  // only show if it's our field and you're not privileged
  if ($is_sitevisitask && !$edit_any_sitevisitask) {
    // add our special validator to the defaults
    $element['#element_validate'][] = '_esdportal_str_sitevisitask_field_widget_validate';
    // if not an admin, rewrite available opts
    $status = _esdportal_str_get_sitevisitstatus($element['#entity']);
    $opts = _esdportal_str_get_sitevisitstatus_options($status);
    drupal_add_js(drupal_get_path('module', 'esdportal_str') . '/esdportal_str.sitevisitask.js');
    $element['#title'] = $opts['prompt'];
    $element['#options'] = $opts['options'];
    /* need to do this via js for now
    if (isset($opts['disabled']) && $opts['disabled'] == true) {
      $element['#disabled'] = true;
    }
    */
  }

  // growth data doc: same game
  if ($is_growthdatadoc && !$edit_any_growthdatadoc) {
    // we can do fancy things here
    $element[0]['#title'] = 'Please upload a growth data document<br>Download templates here (list file links).';
  }
}

function esdportal_str_field_widget_properties_alter(&$widget, $context) {
  // TODO: validate per site visit status state
}

/**
 * Custom validator for sitevisitask options
 * modeled after options_field_widget_validate().
 */
function _esdportal_str_sitevisitask_field_widget_validate($element, &$form_state) {
  // TODO: validate per site visit status state
}

/**
 * Get site visit status tid of school_profile $node.
 *
 * @param object $node
 *   A school_profile node
 * @return integer tid
 *   A site_visit_status term id
 */
function _esdportal_str_get_sitevisitstatus($node) {
  $tid = $node->field_site_visit_status['und'][0]['tid'];
  return $tid;
}

/**
 * Get potential options for a given current site visit status value
 *
 * @param integer $tid
 *   A site_visit_status term id
 * @return array $options
 *   An array of potential next-step information
 */
function _esdportal_str_get_sitevisitstatus_options($tid) {
  switch ($tid) {
    case 2281: // Previously visited, pending response
      $options = array(
        'prompt' => 'We are grateful for your continued participation in the School Review process. To make sure we get the best information from all schools, we are focusing on providing site reviews for schools that have not yet participated or New and Fresh Start schools.
        <br><br>
        For this reason, we will continue to use your site visit scores from last year for this year’s School Review with your permission.',
        // Yes, Mature, 9; No, Revisit, 16, show field_site_visit_reuse_reason
        'options' => array(
          '_none' => 'Please choose...',
          2285 => 'Reuse 2013 site visit scores',
          2289 => 'Apply for revisit',
        ),
        'actions' => null,
        'showblock' => true,
      );
      break;
    case 2285:
      $options = array(
        'prompt' => 'We appreciate your commitment to education.
        <br><br>
        Important note for charter schools: For the student and teacher surveys, please be sure to submit your rosters before December 4 to UChicago Impact by <a href="https://uchicagoimpact.org/detroit-5e" target="_blank">clicking here</a>.
        <br><br>
        And please don’t forget to fill out your school profile below. There are more options available this year.
        <br><br>
        Something to look forward to: there will be more details to come regarding the submission of your school’s growth data information.
        <br><br>
        For further information <a href="http://www.excellentschoolsdetroit.org/en/school-review-faq" target="_blanK">click here</a> and feel free to contact <a href="mailto:eanderson@excellentschoolsdetroit.org">Eric Anderson</a> with any technical questions related to the Portal: (313) 638-0084.',
        'options' => null,
        'actions' => null,
        'showblock' => false,
      );
      break;
    case 2289:
      $options = array(
        'prompt' => 'Please note that we have limited spots for site visits this year and cannot guarantee that we will provide a new visit. We will, however, review your request (submitted below) and be in touch with you soon.
        <br><br>
        Important note for charter schools: Please be sure to partcipate in the student and teacher surveys and submit your rosters before December 4 to UChicago Impact by <a href="https://uchicagoimpact.org/detroit-5e" target="_blank">clicking here</a>.
        <br><br>
        And please don’t forget to fill out your school profile below. There are more options available this year.',
        'options' => null,
        'actions' => null,
        'showblock' => false,
      );
      break;
    case 2283: // Not participating
      $options = array(
        'prompt' => 'We sincerely hope you join us for this year’s School Review process. Your participation ensures that we can provide families with the best information about your school and gives you access to full reports from the 5Essentials student and teacher survey and community site visit.
        <br><br>
        To get started, please let us know you are interested below.',
        // Yes, New, pending ESD month choice, 2; No, Opt out, 8
        'options' => array(
          '_none' => 'Please choose...',
          2282 => 'Yes',
          2284 => 'No',
        ),
        'showblock' => true,
      );
      break;
    case 2282:
      $options = array(
        'prompt' => 'Thank you!
        <br><br>
        We have been notified that you are interested and will be in touch with you very soon with further details and scheduling options.
        <br><br>
        In the meantime, please be sure to submit your rosters to the 5Essentials team to take advantage of the student and teacher survey at no cost to you by <a target="_blank" href="https://uchicagoimpact.org/detroit-5e">clicking here</a>.
        <br><br>
        And please don’t forget to fill out your school profile below with information that is displayed on <a href="http://scorecard.excellentschoolsdetroit.org" target="_blank">our online School Scorecard</a>.
        <br><br>
        For further information <a href="http://www.excellentschoolsdetroit.org/en/school-review-faq" target="_blank">click here</a> and feel free to contact <a href="mailto:eanderson@excellentschoolsdetroit.org">Eric Anderson</a> with any technical questions related to the Portal: (313) 638-0084.',
        'options' => null,
        'actions' => null,
        'showblock' => false,
      );
      break;
    case 2284:
      $options = array(
        'prompt' => 'We are sorry to hear that you are not interested in participating.
        <br><br>
        If you would still like to provide parents with more information about your school on <a href="http://scorecard.excellentschoolsdetroit.org" target="_blank">our online School Scorecard</a>, please feel free to edit your school profile below.',
        'options' => null,
        'actions' => null,
        'showblock' => false,
      );
      break;
    case 2288: // Participating, pending date selection
      $options = array(
        'prompt' => 'Thank you for joining us in the 2014 School Review process.
        <br><br>
        Community site reviewers have been assigned to visit your school during the dates specified below. To complete the steps to receive a site visit, please let us know below all dates during that month that your school is unavailable to receive a visit.',
        // blank, Participating, pending date selection, 15, show field_site_visit_unavailability
        'options' => array(
          2288 => 'Please choose dates...',
          2286 => 'Dates chosen!',
        ),
        'actions' => null,
        'showblock' => true,
      );
      break;
    case 2286:
      $options = array(
        'prompt' => 'You are all set to receive a site visit!
        <br><br>
        If you have any questions about the entirety of the process, you can find more information here (link pending) or contact Ashley Johnson at ajohnson@excellentschoolsdetroit.org.
        <br><br>
        Important note for charter schools: For the student and teacher surveys, please be sure to submit your rosters before December 4 to UChicago Impact by <a href="https://uchicagoimpact.org/detroit-5e)" target="_blank">clicking here</a>.
        <br><br>
        And please don’t forget to fill out your school profile below. There are more options available this year.
        <br><br>
        Something to look forward to: there will be more details to come regarding the submission of your school’s growth data information.
        <br><br>
        For further information <a href="http://www.excellentschoolsdetroit.org/en/school-review-faq" target="_blank">click here</a> and feel free to contact <a href="mailto:eanderson@excellentschoolsdetroit.org" target="_blank">Eric Anderson</a> with any technical questions related to the Portal: (313) 638-0084.',
        'options' => null,
        'actions' => null,
        'showblock' => false,
      );
      break;
    default:
      $options = array(
        'prompt' => 'Thank you for your response!',
        'options' => null,
        'actions' => null,
        'showblock' => false,
      );
      break;
  }
  return $options;
}

/**
 * Get growth data upload status of school_profile $node.
 *
 * @param object $node
 *   A school_profile node
 * @return bool
 */
function _esdportal_str_is_growthdata_uploaded($node) {
  $is_uploaded = false;
  if (count($node->field_growth_data_doc) > 0) {
    $is_uploaded = true;
  }
  return $is_uploaded;
}
/**
 * Implements hook_action_info().
 */
function esdportal_str_action_info() {
  return array(
    'esdportal_str_send_unsafe_email_action' => array(
      'type' => 'system',
      'label' => t('Send unsafe e-mail'),
      'configurable' => TRUE,
      'triggers' => array('any'),
    ),
  );
}

/**
 * Return a form definition so the Send unsafe email action can be configured.
 *
 * @param $context
 *   Default values (if we are editing an existing action instance).
 *
 * @return
 *   Form definition.
 *
 * @see esdportal_str_send_unsafe_email_action_validate()
 * @see esdportal_str_send_unsafe_email_action_submit()
 */
function esdportal_str_send_unsafe_email_action_form($context) {
  // Set default values for form.
  if (!isset($context['recipient'])) {
    $context['recipient'] = '';
  }
  if (!isset($context['subject'])) {
    $context['subject'] = '';
  }
  if (!isset($context['message'])) {
    $context['message'] = '';
  }

  $form['recipient'] = array(
    '#type' => 'textfield',
    '#title' => t('Recipient'),
    '#default_value' => $context['recipient'],
    '#maxlength' => '254',
    '#description' => t('The email address to which the message should be sent OR enter [node:author:mail], [comment:author:mail], etc. if you would like to send an e-mail to the author of the original post.'),
  );
  $form['subject'] = array(
    '#type' => 'textfield',
    '#title' => t('Subject'),
    '#default_value' => $context['subject'],
    '#maxlength' => '254',
    '#description' => t('The subject of the message.'),
  );
  $form['message'] = array(
    '#type' => 'textarea',
    '#title' => t('Message'),
    '#default_value' => $context['message'],
    '#cols' => '80',
    '#rows' => '20',
    '#description' => t('The message that should be sent. You may include placeholders like [node:title], [user:name], and [comment:body] to represent data that will be different each time message is sent. Not all placeholders will be available in all contexts.'),
  );
  return $form;
}

/**
 * Validate esdportal_str_send_unsafe_email_action form submissions.
 */
function esdportal_str_send_unsafe_email_action_validate($form, $form_state) {
  $form_values = $form_state['values'];
  // Validate the configuration form.
  if (!valid_email_address($form_values['recipient']) && strpos($form_values['recipient'], ':mail') === FALSE) {
    // We want the literal %author placeholder to be emphasized in the error message.
    form_set_error('recipient', t('Enter a valid email address or use a token e-mail address such as %author.', array('%author' => '[node:author:mail]')));
  }
}

/**
 * Process esdportal_str_send_unsafe_email_action form submissions.
 */
function esdportal_str_send_unsafe_email_action_submit($form, $form_state) {
  $form_values = $form_state['values'];
  // Process the HTML form to store configuration. The keyed array that
  // we return will be serialized to the database.
  $params = array(
    'recipient' => $form_values['recipient'],
    'subject'   => $form_values['subject'],
    'message'   => $form_values['message'],
  );
  return $params;
}

/**
 * Sends an e-mail message.
 *
 * @param object $entity
 *   An optional node object, which will be added as $context['node'] if
 *   provided.
 * @param array $context
 *   Array with the following elements:
 *   - 'recipient': E-mail message recipient. This will be passed through
 *     token_replace().
 *   - 'subject': The subject of the message. This will be passed through
 *     token_replace().
 *   - 'message': The message to send. This will be passed through
 *     token_replace().
 *   - Other elements will be used as the data for token replacement.
 *
 * @ingroup actions
 */
function esdportal_str_send_unsafe_email_action($entity, $context) {
  if (empty($context['node'])) {
    $context['node'] = $entity;
  }

  $recipient = token_replace($context['recipient'], $context);

  // If the recipient is a registered user with a language preference, use
  // the recipient's preferred language. Otherwise, use the system default
  // language.
  $recipient_account = user_load_by_mail($recipient);
  if ($recipient_account) {
    $language = user_preferred_language($recipient_account);
  }
  else {
    $language = language_default();
  }
  $params = array('context' => $context);

  if (drupal_mail('esdportal_str', 'action_send_unsafe_email', $recipient, $language, $params)) {
    watchdog('action', 'Sent unsafe email to %recipient', array('%recipient' => $recipient));
  }
  else {
    watchdog('error', 'Unable to send unsafe email to %recipient', array('%recipient' => $recipient));
  }
}

/**
 * Implements hook_mail().
 */
function esdportal_str_mail($key, &$message, $params) {
  $context = $params['context'];

  $subject = token_replace($context['subject'], $context);
  //$body = token_replace($context['message'], $context);
  // this is our one modification:
  $body = token_replace($context['message'], $context, array('language' => $language, 'callback' => 'user_mail_tokens', 'sanitize' => FALSE, 'clear' => TRUE));

  $message['subject'] .= str_replace(array("\r", "\n"), '', $subject);
  $message['body'][] = $body;
}

function esdportal_str_mail_alter(&$message) {
  $message['from'] = $message['headers']['From'] = '"Excellent Schools Detroit Logistics" <quan@excellentschoolsdetroit.org>';
}
